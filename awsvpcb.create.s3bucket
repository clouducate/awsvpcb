# Create S3 Bucket
#
$AWSCLI_HOME/procs/log "Starting S3 Bucket create process...."
t=`echo $(($(date +%s)))`
AWSVPCB_S3BUCKET=awsvpcb-elb-log-$USER_ID-$t

$AWSCLI_HOME/procs/clicall "s3api create-bucket --bucket $AWSVPCB_S3BUCKET --acl public-read --region $AWS_REGION" "$AWSCLI_HOME/tempfiles/create.s3bucket.1" "$AWSCLI_HOME/tempfiles/create.s3bucket.1.error"
if [ $? -ne 0 ]; then
   $AWSCLI_HOME/procs/log "Error creating S3 bucket $AWSVPCB_S3BUCKET in AWS -  please capture any output, zip up entire directory and send to professor for review...."
   exit 1
fi
echo "export AWSVPCB_S3BUCKET=$AWSVPCB_S3BUCKET" >> $AWSCLI_HOME/procs/aws-dynamic-vars
$AWSCLI_HOME/procs/log "New S3 bucket $AWSVPCB_S3BUCKET registered and created in AWS...."

#cp $AWSCLI_HOME/secfiles/s3bucket-policy.json.template $AWSCLI_HOME/secfiles/s3bucket-policy.json
sed -e "s/AWSVPCB_S3BUCKET/$AWSVPCB_S3BUCKET/g" $AWSCLI_HOME/secfiles/s3bucket-policy.json.template > $AWSCLI_HOME/secfiles/s3bucket-policy.json

$AWSCLI_HOME/procs/clicall "s3api put-bucket-policy --bucket $AWSVPCB_S3BUCKET --policy file://$AWSCLI_HOME/secfiles/s3bucket-policy.json" "$AWSCLI_HOME/tempfiles/create.s3bucket.2" "$AWSCLI_HOME/tempfiles/create.s3bucket.2.error"
if [ $? -ne 0 ]; then
   $AWSCLI_HOME/procs/log "Error creating policy for S3 bucket $AWSVPCB_S3BUCKET in AWS -  please capture any output, zip up entire directory and send to professor for review...."
   exit 1
fi
$AWSCLI_HOME/procs/log "Put policy created for S3 bucket $AWSVPCB_S3BUCKET in AWS...."

