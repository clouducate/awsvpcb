# Start assignment instance in the VPC
#
instance=$1
instance_id_var=AWSVPCB_${instance}_ID
instance_stop_var=${instance}_STOP
eval "instance_id=\${$instance_id_var}"
eval "instance_stop=\${$instance_stop_var}"
if [ "$instance_stop" == "yes" ]; then
   exit 0
fi

if [ "$instance_id" == "" ]; then
   $AWSCLI_HOME/procs/log "Assignment instance $instance not registered (informational only) - moving on...."
   exit
fi

$AWSCLI_HOME/procs/clicall "ec2 describe-instances --instance-id $instance_id" "$AWSCLI_HOME/tempfiles/start.assignment.instance.1" "$AWSCLI_HOME/tempfiles/start.assignment.instance.1.error"
if [ $? -ne 0 ]; then
   $AWSCLI_HOME/procs/log "Error starting assignment instance $instance in AWS -  please capture any output, zip up entire directory and send to professor for review...."
   exit 1
fi
export json=`cat $AWSCLI_HOME/tempfiles/start.assignment.instance.1`
export instance_running=`$AWSCLI_HOME/procs/json-read "Name:" | grep running`
if [ "$instance_running" != "" ]; then
   $AWSCLI_HOME/procs/log "Assignment $instance instance $instance_id already started in AWS - moving on...."
   exit
fi

$AWSCLI_HOME/procs/clicall "ec2 start-instances --instance-ids $instance_id" "$AWSCLI_HOME/tempfiles/start.assignment.instance.2" "$AWSCLI_HOME/tempfiles/start.assignment.instance.2.error"
if [ $? -ne 0 ]; then
   $AWSCLI_HOME/procs/log "Error starting assignment instance $instance in AWS -  please capture any output, zip up entire directory and send to professor for review...."
   exit 1
fi

$AWSCLI_HOME/procs/log "Waiting for assignment $instance instance $instance_id to start - this may take a while...."
running=0
count=0
while [ $count -le 180 ]; do
   $AWSCLI_HOME/procs/clicall "ec2 describe-instances --instance-id $instance_id" "$AWSCLI_HOME/tempfiles/start.assignment.instance.3" "$AWSCLI_HOME/tempfiles/start.assignment.instance.3.error"
   if [ $? -ne 0 ]; then
      $AWSCLI_HOME/procs/log "Error starting assignment instance $instance in AWS -  please capture any output, zip up entire directory and send to professor for review...."
      exit 1
   fi
   export json=`cat $AWSCLI_HOME/tempfiles/start.assignment.instance.3`
   export instance_running=`$AWSCLI_HOME/procs/json-read "Name:" | grep running`
   if [ "$instance_running" != "" ]; then
      running=1
      break
   else
      let count=count+1
      sleep 2
      continue
   fi
done
if [ $running -eq 0 ]; then
   $AWSCLI_HOME/procs/log "Did not see assignment $instance instance $instance start - please retry...."
   exit 1
fi

$AWSCLI_HOME/procs/log "Assignment $instance instance $instance_id started...."

export PublicDNSName=`$AWSCLI_HOME/procs/json-read "PublicDnsName:" | cut -f 1 -d " " `
if [ "$PublicDNSName" != "" -a "$instance" != "NAT" ]; then
   $AWSCLI_HOME/procs/log "PLEASE TAKE NOTE - DYNAMIC PUBLIC DNS NAME FOR INSTANCE $instance = $PublicDNSName...."
fi
